version: 2
reference:
  images:
    aws: &aws_image
      - image: circleci/python:stretch
  environment: &ENVIRONMENT
    packet_exec_version: "0.1.1"
    SLACK_USERNAME: Vagrant
    SLACK_ICON: https://avatars.slack-edge.com/2017-10-17/257000837696_070f98107cdacc0486f6_36.png
    SLACK_TITLE: Vagrant Packaging
    PACKET_EXEC_DEVICE_NAME: installers
    PACKET_EXEC_DEVICE_SIZE: baremetal_1
    PACKET_EXEC_PREFER_FACILITIES: sjc1,lax1,sea1
    PACKET_EXEC_OPERATING_SYSTEM: ubuntu_18_04
    PACKET_EXEC_PRE_BUILTINS: InstallVmware
    PACKET_EXEC_TMPFS_PATH: /run
jobs:
  package:
    environment:
      <<: *ENVIRONMENT
    docker: *aws_image
    steps:
      - checkout
      - run: sudo pip install awscli
      - run: |
          set +e
          version=$(echo "${CIRCLE_TAG:-master}" | sed 's/^v//')
          aws s3 cp ${ASSETS_PRIVATE_BUCKET}/${CIRCLE_PROJECT_USERNAME}/vagrant/vagrant-${version}.gem vagrant.gem | tee .output
          result=$?
          if [ $result -ne 0 ]; then
            SLACK_STATE=$SLACK_ERROR
            SLACK_MESSAGE="Failed to download Vagrant RubyGem\n\n\`\`\`$(cat .output)\`\`\`"
            eval $SLACK_EXECUTE
            exit $result
          fi
          aws s3 cp ${ASSETS_PRIVATE_BUCKET}/hashicorp/packet-exec/v${packet_exec_version}/packet-exec_linux_amd64 packet-exec | tee .output
          result=$?
          if [ $result -ne 0 ]; then
            SLACK_STATE=$SLACK_ERROR
            SLACK_MESSAGE="Failed to download packet-exec utility\n\n\`\`\`$(cat .output)\`\`\`"
            eval $SLACK_EXECUTE
          fi
          chmod 755 ./packet-exec
          exit $result
      - run: |
          set +e
          ./packet-exec info
          if [ $? -eq 0 ]; then
            exit
          fi
          ./packet-exec create 2>&1 | tee .output
          result=$?
          if [ $result -ne 0 ]; then
            SLACK_STATE=$SLACK_ERROR
            SLACK_MESSAGE="Failed to create remote packet device\n\n\`\`\`$(cat .output)\`\`\`"
            eval $SLACK_EXECUTE
          fi
          exit $result
      - run: |
          set +e
          echo -e -n "${PACKET_SSH_KEY}" > /tmp/packet-key
          chmod 600 /tmp/packet-key
          ./packet-exec run -ssh-key /tmp/packet-key -upload -- ./.runner-vmware.sh 2>&1 | tee .output
          result=$?
          rm /tmp/packet-key
          if [ $result -ne 0 ]; then
            SLACK_STATE=$SLACK_ERROR
            SLACK_MESSAGE="Failed to build Vagrant installer packages\n\n\`\`\`$(cat .output)\`\`\`"
            eval $SLACK_EXECUTE
          fi
          exit $result
      - run: |
          set +e
          version="${CIRCLE_TAG:-master}"
          store="${ASSETS_PRIVATE_BUCKET}/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/${version}/"
          aws s3 cp --recursive pkg/ "${store}" | tee .output
          result=$?
          if [ $result -eq 0 ]; then
            SLACK_MESSAGE="New Vagrant installer packages available\n\n* Version: ${version}\n\n> Location: ${store}"
          else
            SLACK_STATE=$SLACK_ERROR
            SLACK_MESSAGE="Failed to upload vagrant installer packages\n\n\`\`\`$(cat .output)\`\`\`"
          fi
          eval $SLACK_EXECUTE
          exit $result
workflows:
  version: 2
  build:
    jobs:
      - package:
          context: vagrant-test
          filters:
            branches:
              ignore: master
            tags:
              only: /.*/
